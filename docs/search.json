[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "stream space",
    "section": "",
    "text": "데이터 분석을 공부하는 오서연입니다."
  },
  {
    "objectID": "index.html#홈페이지-첫-화면입니다",
    "href": "index.html#홈페이지-첫-화면입니다",
    "title": "stream space",
    "section": "",
    "text": "안녕하세요, 데이터 분석을 공부하는 오서연입니다."
  },
  {
    "objectID": "index.html#수업-내용",
    "href": "index.html#수업-내용",
    "title": "stream space",
    "section": "24.07.12 수업 내용",
    "text": "24.07.12 수업 내용\n\ndeep copy를 사용해야 합니다.\n\n\nb = a[:] # 1번\nb = a.copy() # 2번"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "homework1.html",
    "href": "homework1.html",
    "title": "Homework(1)",
    "section": "",
    "text": "import pandas as pd\ndf_fruit = pd.DataFrame({'제품': ['사과', '딸기', '수박'], \n                         '가격': [1800, 1500, 3000], '판매량': [24, 38, 13]})\ndf_fruit\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "homework1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "homework1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "Homework(1)",
    "section": "",
    "text": "import pandas as pd\ndf_fruit = pd.DataFrame({'제품': ['사과', '딸기', '수박'], \n                         '가격': [1800, 1500, 3000], '판매량': [24, 38, 13]})\ndf_fruit\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "homework1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해보세요.",
    "href": "homework1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해보세요.",
    "title": "Homework(1)",
    "section": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.",
    "text": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.\n\n가격 평균\n\nsum(df_fruit['가격'])/len(df_fruit)\n\n2100.0\n\n\n\n\n판매량 평균\n\nsum(df_fruit['판매량'])/len(df_fruit)\n\n25.0"
  },
  {
    "objectID": "homework1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "href": "homework1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "title": "Homework(1)",
    "section": "mpg 데이터를 불러와 복사본을 만드세요.",
    "text": "mpg 데이터를 불러와 복사본을 만드세요.\n\nimport pandas as pd\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "homework1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "homework1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "Homework(1)",
    "section": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\nmpg_new = mpg_new.rename(columns = {\"cty\" : \"city\", \"hwy\" : \"highway\"})\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "homework1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "homework1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "Homework(1)",
    "section": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\nmpg_new[0:5]\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "homework1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "homework1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "Homework(1)",
    "section": "midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nimport pandas as pd\nmidwest = pd.read_csv(\"C:/Doit_Python-main/Data/midwest.csv\")\n\nmidwest.head()\nmidwest.tail()\nmidwest.shape\nmidwest.info()\nmidwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\n\nhead()는 데이터 앞부분을 출력해준다.\ntail()은 데이터 뒷부분을 출력해준다.\nshape()는 행, 열 개수를 출력한다. (437, 28)로 출력되었으므로 437행, 28열을 뜻한다.\ninfo()는 변수 속성을 출력한다. 변수는 열의 개수와 같으므로 28개이고, 다 non-null 상태이다. 즉, 값이 다 존재한다는 뜻이다. 데이터 타입은 int64, float64, object(문자열)로 이루어져 있다.\ndescribe()는 요약 통계량을 출력한다. 각 데이터의 개수(count), 평균(mean), 표준편차(std), 최소값(min), 1사분위수(25%), 중앙값(50%), 3사분위수(75%), 최대값(max)를 보여준다."
  },
  {
    "objectID": "homework1.html#poptoptal전체-인구-변수를-total로-popasian아시아-안구-변수를-asian으로-수정하세요.",
    "href": "homework1.html#poptoptal전체-인구-변수를-total로-popasian아시아-안구-변수를-asian으로-수정하세요.",
    "title": "Homework(1)",
    "section": "poptoptal(전체 인구) 변수를 total로, popasian(아시아 안구) 변수를 asian으로 수정하세요.",
    "text": "poptoptal(전체 인구) 변수를 total로, popasian(아시아 안구) 변수를 asian으로 수정하세요.\n\nmidwest = midwest.rename(columns = {\"poptotal\" : \"total\", \"popasian\" : \"asian\"})\nmidwest\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "homework1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고",
    "href": "homework1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고",
    "title": "Homework(1)",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고,",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고,"
  },
  {
    "objectID": "homework1.html#히스토그램을-만들어-분포를-살펴보세요.",
    "href": "homework1.html#히스토그램을-만들어-분포를-살펴보세요.",
    "title": "Homework(1)",
    "section": "히스토그램을 만들어 분포를 살펴보세요.",
    "text": "히스토그램을 만들어 분포를 살펴보세요."
  },
  {
    "objectID": "homework1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "homework1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "Homework(1)",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nmidwest[\"asian_percentage\"] = ((midwest[\"asian\"] / midwest[\"total\"])*100)\nmidwest\nmidwest.info()\n\nimport matplotlib.pyplot as plot\nmidwest[\"asian_percentage\"].plot.hist()\nplot.show()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 29 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \n 28  asian_percentage      437 non-null    float64\ndtypes: float64(16), int64(10), object(3)\nmemory usage: 99.1+ KB\n\n\n\n\n\n\n\n\n\n\n이 그래프는 x축에 전체 인구 대비 아시아 인구 백분율 값이 표현되어 있다. y축에는 각 계급 구간의 빈도가 표현되어 있다."
  },
  {
    "objectID": "homework1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어보세요.",
    "href": "homework1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어보세요.",
    "title": "Homework(1)",
    "section": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어보세요.",
    "text": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어보세요.\n\n전체 평균\n\nimport numpy as np\nasian_mean = np.mean(midwest[\"asian_percentage\"])\n\n\n\nlarge, small 부여한 파생변수\n\nmidwest[\"asian_mean\"] = np.where(midwest[\"asian_percentage\"] &gt; asian_mean, \"large\", \"small\")\nmidwest.tail()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_percentage\nasian_mean\n\n\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "homework1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "homework1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "Homework(1)",
    "section": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nmidwest[\"asian_mean\"].value_counts()\ncount_mean = midwest[\"asian_mean\"].value_counts()\ncount_mean.plot.bar(rot = 0)\nplot.show()"
  },
  {
    "objectID": "index.html#안녕하세요",
    "href": "index.html#안녕하세요",
    "title": "stream space",
    "section": "",
    "text": "데이터 분석을 공부하는 오서연입니다."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "blog",
    "section": "",
    "text": "homework(4)\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 25, 2024\n\n\nohseyn\n\n\n\n\n\n\n\n\n\n\n\n\n240722 12장 수업\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\nohseyn\n\n\n\n\n\n\n\n\n\n\n\n\nhomework(3)\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\nohseyn\n\n\n\n\n\n\n\n\n\n\n\n\nHomework(2)\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\nohseyn\n\n\n\n\n\n\n\n\n\n\n\n\nHomework(1)\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\nohseyn\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터스쿨\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 8, 2024\n\n\nohseyn\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "homework2.html",
    "href": "homework2.html",
    "title": "homework2",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\ndispl1 = mpg.query(\"displ &lt;= 4\")\ndispl1[\"hwy\"].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\ndispl2 = mpg.query(\"displ &gt;= 5\")\ndispl2[\"hwy\"].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n따라서 displ(배기량)이 4 이하인 자동차의 hwy 평균이 더 높다."
  },
  {
    "objectID": "homework2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "homework2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "homework2",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\ndispl1 = mpg.query(\"displ &lt;= 4\")\ndispl1[\"hwy\"].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\ndispl2 = mpg.query(\"displ &gt;= 5\")\ndispl2[\"hwy\"].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n따라서 displ(배기량)이 4 이하인 자동차의 hwy 평균이 더 높다."
  },
  {
    "objectID": "homework2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "href": "homework2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "title": "homework2",
    "section": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.\n\naudi의 cty 평균\n\naudi = mpg.query(\"manufacturer == 'audi'\")\naudi[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n\ntoyota의 cty 평균\n\ntoyota = mpg.query(\"manufacturer == 'toyota'\")\ntoyota[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n\n따라서 toyota의 cty 평균이 더 높다."
  },
  {
    "objectID": "homework2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "href": "homework2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "title": "homework2",
    "section": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.",
    "text": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.\n\ncfh = mpg.query(\"manufacturer in ['chevrolet', 'ford', 'honda']\")\ncfh[\"hwy\"].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "homework2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "homework2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "homework2",
    "section": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\naudi = mpg.query(\"manufacturer == 'audi'\")\naudi.sort_values(\"hwy\", ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "homework2.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "href": "homework2.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "title": "homework2",
    "section": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다.",
    "text": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다."
  },
  {
    "objectID": "homework2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "homework2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "homework2",
    "section": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\nmpg_new = mpg_new.assign(total = mpg_new[\"cty\"] + mpg_new[\"hwy\"])"
  },
  {
    "objectID": "homework2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "href": "homework2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "title": "homework2",
    "section": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.",
    "text": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg_new = mpg_new.assign(mean = (mpg_new[\"cty\"] + mpg_new[\"hwy\"])/2)"
  },
  {
    "objectID": "homework2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "homework2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "homework2",
    "section": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg_new.sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "homework2.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "homework2.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "homework2",
    "section": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\nmpg.assign(total = mpg[\"cty\"] + mpg[\"hwy\"], \n           mean = (mpg[\"cty\"] + mpg[\"hwy\"])/2)\\\n          .sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw2/homework2.html",
    "href": "posts/hw2/homework2.html",
    "title": "homework2",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\ndispl1 = mpg.query(\"displ &lt;= 4\")\ndispl1[\"hwy\"].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\ndispl2 = mpg.query(\"displ &gt;= 5\")\ndispl2[\"hwy\"].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n따라서 displ(배기량)이 4 이하인 자동차의 hwy 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/homework2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/homework2.html#자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.-displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "homework2",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n\ndispl1 = mpg.query(\"displ &lt;= 4\")\ndispl1[\"hwy\"].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\ndispl2 = mpg.query(\"displ &gt;= 5\")\ndispl2[\"hwy\"].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n따라서 displ(배기량)이 4 이하인 자동차의 hwy 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/homework2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/homework2.html#자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "title": "homework2",
    "section": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.",
    "text": "자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.\n\naudi의 cty 평균\n\naudi = mpg.query(\"manufacturer == 'audi'\")\naudi[\"cty\"].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n\ntoyota의 cty 평균\n\ntoyota = mpg.query(\"manufacturer == 'toyota'\")\ntoyota[\"cty\"].mean()\n\nnp.float64(18.529411764705884)\n\n\n\n따라서 toyota의 cty 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/homework2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "href": "posts/hw2/homework2.html#chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "title": "homework2",
    "section": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.",
    "text": "‘chevrolet’, ‘ford’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.\n\ncfh = mpg.query(\"manufacturer in ['chevrolet', 'ford', 'honda']\")\ncfh[\"hwy\"].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "posts/hw2/homework2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "posts/hw2/homework2.html#audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "homework2",
    "section": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\naudi = mpg.query(\"manufacturer == 'audi'\")\naudi.sort_values(\"hwy\", ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "posts/hw2/homework2.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "href": "posts/hw2/homework2.html#mpg-데이터는-연비를-나타내는-변수가-hwy고속도로-연비-cty도시-연비-두-종류로-분리되어-있습니다.-두-변수를-각각-활용하는-대신-하나의-합산-연비-변수를-만들어-분석하려고-합니다.",
    "title": "homework2",
    "section": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다.",
    "text": "mpg 데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다."
  },
  {
    "objectID": "posts/hw2/homework2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "posts/hw2/homework2.html#mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "homework2",
    "section": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\nmpg_new = mpg_new.assign(total = mpg_new[\"cty\"] + mpg_new[\"hwy\"])"
  },
  {
    "objectID": "posts/hw2/homework2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "href": "posts/hw2/homework2.html#앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요.",
    "title": "homework2",
    "section": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.",
    "text": "앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg_new = mpg_new.assign(mean = (mpg_new[\"cty\"] + mpg_new[\"hwy\"])/2)"
  },
  {
    "objectID": "posts/hw2/homework2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "posts/hw2/homework2.html#평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "homework2",
    "section": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg_new.sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw2/homework2.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "posts/hw2/homework2.html#번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "homework2",
    "section": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\nmpg.assign(total = mpg[\"cty\"] + mpg[\"hwy\"], \n           mean = (mpg[\"cty\"] + mpg[\"hwy\"])/2)\\\n          .sort_values(\"mean\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw1/homework1.html",
    "href": "posts/hw1/homework1.html",
    "title": "Homework(1)",
    "section": "",
    "text": "import pandas as pd\ndf_fruit = pd.DataFrame({'제품': ['사과', '딸기', '수박'], \n                         '가격': [1800, 1500, 3000], '판매량': [24, 38, 13]})\ndf_fruit\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/homework1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "posts/hw1/homework1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "Homework(1)",
    "section": "",
    "text": "import pandas as pd\ndf_fruit = pd.DataFrame({'제품': ['사과', '딸기', '수박'], \n                         '가격': [1800, 1500, 3000], '판매량': [24, 38, 13]})\ndf_fruit\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/homework1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해보세요.",
    "href": "posts/hw1/homework1.html#앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해보세요.",
    "title": "Homework(1)",
    "section": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.",
    "text": "앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.\n\n가격 평균\n\nsum(df_fruit['가격'])/len(df_fruit)\n\n2100.0\n\n\n\n\n판매량 평균\n\nsum(df_fruit['판매량'])/len(df_fruit)\n\n25.0"
  },
  {
    "objectID": "posts/hw1/homework1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "href": "posts/hw1/homework1.html#mpg-데이터를-불러와-복사본을-만드세요.",
    "title": "Homework(1)",
    "section": "mpg 데이터를 불러와 복사본을 만드세요.",
    "text": "mpg 데이터를 불러와 복사본을 만드세요.\n\nimport pandas as pd\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/homework1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "posts/hw1/homework1.html#복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "Homework(1)",
    "section": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\nmpg_new = mpg_new.rename(columns = {\"cty\" : \"city\", \"hwy\" : \"highway\"})\nmpg_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/homework1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "posts/hw1/homework1.html#데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "Homework(1)",
    "section": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\nmpg_new[0:5]\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "posts/hw1/homework1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "posts/hw1/homework1.html#midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "Homework(1)",
    "section": "midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nimport pandas as pd\nmidwest = pd.read_csv(\"C:/Doit_Python-main/Data/midwest.csv\")\n\nmidwest.head()\nmidwest.tail()\nmidwest.shape\nmidwest.info()\nmidwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\n\nhead()는 데이터 앞부분을 출력해준다.\ntail()은 데이터 뒷부분을 출력해준다.\nshape()는 행, 열 개수를 출력한다. (437, 28)로 출력되었으므로 437행, 28열을 뜻한다.\ninfo()는 변수 속성을 출력한다. 변수는 열의 개수와 같으므로 28개이고, 다 non-null 상태이다. 즉, 값이 다 존재한다는 뜻이다. 데이터 타입은 int64, float64, object(문자열)로 이루어져 있다.\ndescribe()는 요약 통계량을 출력한다. 각 데이터의 개수(count), 평균(mean), 표준편차(std), 최소값(min), 1사분위수(25%), 중앙값(50%), 3사분위수(75%), 최대값(max)를 보여준다."
  },
  {
    "objectID": "posts/hw1/homework1.html#poptoptal전체-인구-변수를-total로-popasian아시아-안구-변수를-asian으로-수정하세요.",
    "href": "posts/hw1/homework1.html#poptoptal전체-인구-변수를-total로-popasian아시아-안구-변수를-asian으로-수정하세요.",
    "title": "Homework(1)",
    "section": "poptoptal(전체 인구) 변수를 total로, popasian(아시아 안구) 변수를 asian으로 수정하세요.",
    "text": "poptoptal(전체 인구) 변수를 total로, popasian(아시아 안구) 변수를 asian으로 수정하세요.\n\nmidwest = midwest.rename(columns = {\"poptotal\" : \"total\", \"popasian\" : \"asian\"})\nmidwest\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "posts/hw1/homework1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "posts/hw1/homework1.html#total-asian-변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "Homework(1)",
    "section": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nmidwest[\"asian_percentage\"] = ((midwest[\"asian\"] / midwest[\"total\"])*100)\nmidwest\nmidwest.info()\n\nimport matplotlib.pyplot as plot\nmidwest[\"asian_percentage\"].plot.hist()\nplot.show()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 29 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \n 28  asian_percentage      437 non-null    float64\ndtypes: float64(16), int64(10), object(3)\nmemory usage: 99.1+ KB\n\n\n\n\n\n\n\n\n\n\n이 그래프는 x축에 전체 인구 대비 아시아 인구 백분율 값이 표현되어 있다. y축에는 각 계급 구간의 빈도가 표현되어 있다."
  },
  {
    "objectID": "posts/hw1/homework1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어보세요.",
    "href": "posts/hw1/homework1.html#아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어보세요.",
    "title": "Homework(1)",
    "section": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어보세요.",
    "text": "아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어보세요.\n\n전체 평균\n\nimport numpy as np\nasian_mean = np.mean(midwest[\"asian_percentage\"])\n\n\n\nlarge, small 부여한 파생변수\n\nmidwest[\"asian_mean\"] = np.where(midwest[\"asian_percentage\"] &gt; asian_mean, \"large\", \"small\")\nmidwest.tail()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_percentage\nasian_mean\n\n\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "posts/hw1/homework1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "posts/hw1/homework1.html#large와-small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "Homework(1)",
    "section": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nmidwest[\"asian_mean\"].value_counts()\ncount_mean = midwest[\"asian_mean\"].value_counts()\ncount_mean.plot.bar(rot = 0)\nplot.show()"
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "LS 빅데이터스쿨",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!"
  },
  {
    "objectID": "posts/240722/240722.html",
    "href": "posts/240722/240722.html",
    "title": "240722",
    "section": "",
    "text": "import pandas as pd\n\nmpg = pd.read_csv(\"C:/Data/mpg.csv\")\nmpg.shape\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.scatterplot(data=mpg, x=\"displ\", y=\"hwy\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\nsns.scatterplot(data=mpg, x=\"displ\", y=\"hwy\", hue=\"drv\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.scatterplot(data=mpg, x=\"displ\", y=\"hwy\").set(xlim=[3,6], ylim=[10,30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/240722/240722.html#그래프-만들기",
    "href": "posts/240722/240722.html#그래프-만들기",
    "title": "240722",
    "section": "",
    "text": "import pandas as pd\n\nmpg = pd.read_csv(\"C:/Data/mpg.csv\")\nmpg.shape\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.scatterplot(data=mpg, x=\"displ\", y=\"hwy\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\nsns.scatterplot(data=mpg, x=\"displ\", y=\"hwy\", hue=\"drv\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\nsns.scatterplot(data=mpg, x=\"displ\", y=\"hwy\").set(xlim=[3,6], ylim=[10,30])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/240722/240722.html#막대-그래프",
    "href": "posts/240722/240722.html#막대-그래프",
    "title": "240722",
    "section": "막대 그래프",
    "text": "막대 그래프\n\nmpg[\"drv\"].unique()\ndf_mpg = mpg.groupby(\"drv\", as_index=False).agg(mean_hwy = (\"hwy\", \"mean\"))\nsns.barplot(data=df_mpg, x=\"drv\", y=\"mean_hwy\", hue=\"drv\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n크기순 정렬\n\nsns.barplot(data=df_mpg.sort_values(\"mean_hwy\", ascending = False), x=\"drv\", y=\"mean_hwy\", hue=\"drv\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/240722/240722.html#빈도-막대-그래프",
    "href": "posts/240722/240722.html#빈도-막대-그래프",
    "title": "240722",
    "section": "빈도 막대 그래프",
    "text": "빈도 막대 그래프\n\ndf_mpg = mpg.groupby(\"drv\", as_index=False).agg(n=(\"drv\", \"count\"))\nsns.barplot(data=df_mpg, x=\"drv\", y=\"n\", hue=\"drv\") # barplot(막대), 3행 2열 데이터\nsns.countplot(data=mpg, x=\"drv\", hue=\"drv\") # countplot(빈도 막대), 원본 데이터\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/240722/240722.html#빈도-막대-그래프countplot",
    "href": "posts/240722/240722.html#빈도-막대-그래프countplot",
    "title": "240722",
    "section": "빈도 막대 그래프(countplot())",
    "text": "빈도 막대 그래프(countplot())\n\ndf_mpg = mpg.groupby(\"drv\", as_index=False).agg(n=(\"drv\", \"count\"))\nsns.countplot(data=mpg, x=\"drv\", hue=\"drv\") # countplot(빈도 막대), 원본 데이터\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\ncf) barplot\n\nsns.barplot(data=df_mpg, x=\"drv\", y=\"n\", hue=\"drv\") # barplot(막대), 3행 2열 데이터\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/240722/240722.html#산점도-만들기",
    "href": "posts/240722/240722.html#산점도-만들기",
    "title": "240722",
    "section": "산점도 만들기",
    "text": "산점도 만들기\n\nimport plotly.express as px\npx.scatter(data_frame = mpg, x = \"cty\", y = \"hwy\", color=\"drv\")"
  },
  {
    "objectID": "posts/240722/240722.html#막대-그래프-만들기",
    "href": "posts/240722/240722.html#막대-그래프-만들기",
    "title": "240722",
    "section": "막대 그래프 만들기",
    "text": "막대 그래프 만들기\n\ndf = mpg.groupby(\"category\", as_index = False).agg(n = (\"category\", \"count\"))\npx.bar(data_frame = df, x = \"category\", y = \"n\", color = \"category\")"
  },
  {
    "objectID": "posts/hw3/homework3.html",
    "href": "posts/hw3/homework3.html",
    "title": "homework(3)",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"C:/Data/mpg.csv\")\nsns.scatterplot(data = mpg, x = \"cty\", y = \"hwy\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/homework3.html#mpg-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "href": "posts/hw3/homework3.html#mpg-데이터의-cty도시-연비와-hwy고속도로-연비-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-cty-y축은-hwy로-된-산점도를-만들어-보세요.",
    "title": "homework(3)",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"C:/Data/mpg.csv\")\nsns.scatterplot(data = mpg, x = \"cty\", y = \"hwy\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/homework3.html#미국의-지역별-인구통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "href": "posts/hw3/homework3.html#미국의-지역별-인구통계-정보를-담은-midwest.csv를-이용해-전체-인구와-아시아인-인구-간에-어떤-관계가-있는지-알아보려고-합니다.-x축은-poptotal전체-인구-y축은-popasian아시아인-인구으로-된-산점도를-만들어-보세요.-전체-인구는-50만-명-이하-아시아인-인구는-1만-명-이하인-지역만-산점도에-표시되게-설정하세요.",
    "title": "homework(3)",
    "section": "미국의 지역별 인구통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.",
    "text": "미국의 지역별 인구통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.\n\nmidwest = pd.read_csv(\"C:/Data/midwest.csv\")\nsns.scatterplot(data = midwest, x = \"poptotal\", y = \"popasian\").set(xlim=[0,500000], ylim=[0,10000])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/homework3.html#어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-순으로-정렬하세요.",
    "href": "posts/hw3/homework3.html#어떤-회사에서-생산한-suv-차종의-도시-연비가-높은지-알아보려고-합니다.-suv-차종을-대상으로-cty연비-평균이-가장-높은-회사-다섯-곳을-막대-그래프로-표현해-보세요.-막대는-연비가-높은-순으로-정렬하세요.",
    "title": "homework(3)",
    "section": "어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 순으로 정렬하세요.",
    "text": "어떤 회사에서 생산한 ‘suv’ 차종의 도시 연비가 높은지 알아보려고 합니다. ‘suv’ 차종을 대상으로 cty(연비) 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 순으로 정렬하세요.\n\nmpg = pd.read_csv(\"C:/Data/mpg.csv\")\nsuv = mpg.query(\"category == 'suv'\").groupby(\"manufacturer\", as_index = False)\\\n                                    .agg(mean_cty = (\"cty\", \"mean\"))\\\n                                    .sort_values(\"mean_cty\", ascending = False)\\\n                                    .head(5)\nsns.barplot(data = suv, x = \"manufacturer\", y = \"mean_cty\", hue = \"manufacturer\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/homework3.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "href": "posts/hw3/homework3.html#자동차-중에-어떤-category자동차-종류가-많은지-알아보려고-합니다.-sns.barplot을-이용해-자동차-종류별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "title": "homework(3)",
    "section": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.",
    "text": "자동차 중에 어떤 category(자동차 종류)가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ndf_category = mpg.groupby(\"category\", as_index = False)\\\n                .agg(category_count = (\"category\", \"count\"))\\\n                .sort_values(\"category_count\", ascending = False)\nsns.barplot(data = df_category, x = \"category\", y = \"category_count\", hue = \"category\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/homework4.html",
    "href": "posts/hw4/homework4.html",
    "title": "homework(4)",
    "section": "",
    "text": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef my_pdf(x, mu, sigma):\n    return ((sigma * math.sqrt(2*math.pi))**(-1)) * (math.exp((-1)*((x-mu)**2)/2*sigma**2))\n\nx_values = np.linspace(0, 6, 100)\npdf_values = [my_pdf(x, 3, 2) for x in x_values]\n\nplt.plot(x_values, pdf_values)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/homework4.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu-3-sigma-2-의-pdf를-그릴-것.",
    "href": "posts/hw4/homework4.html#정규분포-pdf-값을-계산하는-자신만의-파이썬-함수를-정의하고-정규분포-mu-3-sigma-2-의-pdf를-그릴-것.",
    "title": "homework(4)",
    "section": "",
    "text": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef my_pdf(x, mu, sigma):\n    return ((sigma * math.sqrt(2*math.pi))**(-1)) * (math.exp((-1)*((x-mu)**2)/2*sigma**2))\n\nx_values = np.linspace(0, 6, 100)\npdf_values = [my_pdf(x, 3, 2) for x in x_values]\n\nplt.plot(x_values, pdf_values)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw4/homework4.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오.-x-n2-32",
    "href": "posts/hw4/homework4.html#파이썬-scipy-패키지-사용해서-다음과-같은-확률을-구하시오.-x-n2-32",
    "title": "homework(4)",
    "section": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오. X ~ N(2, 3^2)",
    "text": "2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오. X ~ N(2, 3^2)\n\n1) P(X &lt; 3)\n\nfrom scipy.stats import norm\nnorm.cdf(3, 3, 2)\n\nnp.float64(0.5)\n\n\n\n\n2) P(2 &lt; X &lt; 5)\n\nnorm.cdf(5, 3, 2) - norm.cdf(2, 3, 2)\n\nnp.float64(0.532807207342556)\n\n\n\n\n3) P(X &lt; 3 or X &gt; 7)\n\nnorm.cdf(3, 3, 2) + (1 - norm.cdf(7, 3, 2))\n\nnp.float64(0.5227501319481792)"
  },
  {
    "objectID": "posts/hw4/homework4.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "href": "posts/hw4/homework4.html#ls-빅데이터-스쿨-학생들의-중간고사-점수는-평균이-30이고-분산이-4인-정규분포를-따른다.-상위-5에-해당하는-학생의-점수는",
    "title": "homework(4)",
    "section": "3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?",
    "text": "3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\nnorm.ppf(0.95, 30, 2)\n\nnp.float64(33.28970725390295)"
  }
]