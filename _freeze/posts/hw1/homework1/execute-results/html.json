{
  "hash": "fae3c39ebecdf8bb3fa5b31ae6b82c3e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Homework(1)\n---\n\n## 다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\n::: {#6b1453ed .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\ndf_fruit = pd.DataFrame({'제품': ['사과', '딸기', '수박'], \n                         '가격': [1800, 1500, 3000], '판매량': [24, 38, 13]})\ndf_fruit\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>제품</th>\n      <th>가격</th>\n      <th>판매량</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>사과</td>\n      <td>1800</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>딸기</td>\n      <td>1500</td>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>수박</td>\n      <td>3000</td>\n      <td>13</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.\n\n### 가격 평균\n\n::: {#85d52453 .cell execution_count=2}\n``` {.python .cell-code}\nsum(df_fruit['가격'])/len(df_fruit)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n2100.0\n```\n:::\n:::\n\n\n### 판매량 평균\n\n::: {#dafea638 .cell execution_count=3}\n``` {.python .cell-code}\nsum(df_fruit['판매량'])/len(df_fruit)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n25.0\n```\n:::\n:::\n\n\n## mpg 데이터를 불러와 복사본을 만드세요.\n\n::: {#bf656d47 .cell execution_count=4}\n``` {.python .cell-code}\nimport pandas as pd\nmpg = pd.read_csv(\"C:/Doit_Python-main/Data/mpg.csv\")\nmpg_new = mpg.copy()\nmpg_new\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>229</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(s6)</td>\n      <td>f</td>\n      <td>19</td>\n      <td>28</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>230</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>231</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>232</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>233</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>3.6</td>\n      <td>2008</td>\n      <td>6</td>\n      <td>auto(s6)</td>\n      <td>f</td>\n      <td>17</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n  </tbody>\n</table>\n<p>234 rows × 11 columns</p>\n</div>\n```\n:::\n:::\n\n\n## 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\n::: {#fde63d7d .cell execution_count=5}\n``` {.python .cell-code}\nmpg_new = mpg_new.rename(columns = {\"cty\" : \"city\", \"hwy\" : \"highway\"})\nmpg_new\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>city</th>\n      <th>highway</th>\n      <th>fl</th>\n      <th>category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>229</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(s6)</td>\n      <td>f</td>\n      <td>19</td>\n      <td>28</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>230</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>231</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>232</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>233</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>3.6</td>\n      <td>2008</td>\n      <td>6</td>\n      <td>auto(s6)</td>\n      <td>f</td>\n      <td>17</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n  </tbody>\n</table>\n<p>234 rows × 11 columns</p>\n</div>\n```\n:::\n:::\n\n\n## 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\n::: {#dc5d4b73 .cell execution_count=6}\n``` {.python .cell-code}\nmpg_new[0:5]\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>city</th>\n      <th>highway</th>\n      <th>fl</th>\n      <th>category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\n::: {#264ad4ed .cell execution_count=7}\n``` {.python .cell-code}\nimport pandas as pd\nmidwest = pd.read_csv(\"C:/Doit_Python-main/Data/midwest.csv\")\n\nmidwest.head()\nmidwest.tail()\nmidwest.shape\nmidwest.info()\nmidwest.describe()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PID</th>\n      <th>area</th>\n      <th>poptotal</th>\n      <th>popdensity</th>\n      <th>popwhite</th>\n      <th>popblack</th>\n      <th>popamerindian</th>\n      <th>popasian</th>\n      <th>popother</th>\n      <th>percwhite</th>\n      <th>...</th>\n      <th>perchsd</th>\n      <th>percollege</th>\n      <th>percprof</th>\n      <th>poppovertyknown</th>\n      <th>percpovertyknown</th>\n      <th>percbelowpoverty</th>\n      <th>percchildbelowpovert</th>\n      <th>percadultpoverty</th>\n      <th>percelderlypoverty</th>\n      <th>inmetro</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>4.370000e+02</td>\n      <td>437.000000</td>\n      <td>4.370000e+02</td>\n      <td>4.370000e+02</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>...</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>4.370000e+02</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1437.338673</td>\n      <td>0.033169</td>\n      <td>9.613030e+04</td>\n      <td>3097.742985</td>\n      <td>8.183992e+04</td>\n      <td>1.102388e+04</td>\n      <td>343.109840</td>\n      <td>1310.464531</td>\n      <td>1612.931350</td>\n      <td>95.558441</td>\n      <td>...</td>\n      <td>73.965546</td>\n      <td>18.272736</td>\n      <td>4.447259</td>\n      <td>9.364228e+04</td>\n      <td>97.110267</td>\n      <td>12.510505</td>\n      <td>16.447464</td>\n      <td>10.918798</td>\n      <td>11.389043</td>\n      <td>0.343249</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>876.390266</td>\n      <td>0.014679</td>\n      <td>2.981705e+05</td>\n      <td>7664.751786</td>\n      <td>2.001966e+05</td>\n      <td>7.895827e+04</td>\n      <td>868.926751</td>\n      <td>9518.394189</td>\n      <td>18526.540699</td>\n      <td>7.087358</td>\n      <td>...</td>\n      <td>5.843177</td>\n      <td>6.261908</td>\n      <td>2.408427</td>\n      <td>2.932351e+05</td>\n      <td>2.749863</td>\n      <td>5.150155</td>\n      <td>7.228634</td>\n      <td>5.109166</td>\n      <td>3.661259</td>\n      <td>0.475338</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>561.000000</td>\n      <td>0.005000</td>\n      <td>1.701000e+03</td>\n      <td>85.050000</td>\n      <td>4.160000e+02</td>\n      <td>0.000000e+00</td>\n      <td>4.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>10.694087</td>\n      <td>...</td>\n      <td>46.912261</td>\n      <td>7.336108</td>\n      <td>0.520291</td>\n      <td>1.696000e+03</td>\n      <td>80.902441</td>\n      <td>2.180168</td>\n      <td>1.918955</td>\n      <td>1.938504</td>\n      <td>3.547067</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>670.000000</td>\n      <td>0.024000</td>\n      <td>1.884000e+04</td>\n      <td>622.407407</td>\n      <td>1.863000e+04</td>\n      <td>2.900000e+01</td>\n      <td>44.000000</td>\n      <td>35.000000</td>\n      <td>20.000000</td>\n      <td>94.886032</td>\n      <td>...</td>\n      <td>71.325329</td>\n      <td>14.113725</td>\n      <td>2.997957</td>\n      <td>1.836400e+04</td>\n      <td>96.894572</td>\n      <td>9.198715</td>\n      <td>11.624088</td>\n      <td>7.668009</td>\n      <td>8.911763</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1221.000000</td>\n      <td>0.030000</td>\n      <td>3.532400e+04</td>\n      <td>1156.208330</td>\n      <td>3.447100e+04</td>\n      <td>2.010000e+02</td>\n      <td>94.000000</td>\n      <td>102.000000</td>\n      <td>66.000000</td>\n      <td>98.032742</td>\n      <td>...</td>\n      <td>74.246891</td>\n      <td>16.797562</td>\n      <td>3.814239</td>\n      <td>3.378800e+04</td>\n      <td>98.169562</td>\n      <td>11.822313</td>\n      <td>15.270164</td>\n      <td>10.007610</td>\n      <td>10.869119</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2059.000000</td>\n      <td>0.038000</td>\n      <td>7.565100e+04</td>\n      <td>2330.000000</td>\n      <td>7.296800e+04</td>\n      <td>1.291000e+03</td>\n      <td>288.000000</td>\n      <td>401.000000</td>\n      <td>345.000000</td>\n      <td>99.074935</td>\n      <td>...</td>\n      <td>77.195345</td>\n      <td>20.549893</td>\n      <td>4.949324</td>\n      <td>7.284000e+04</td>\n      <td>98.598636</td>\n      <td>15.133226</td>\n      <td>20.351878</td>\n      <td>13.182182</td>\n      <td>13.412162</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3052.000000</td>\n      <td>0.110000</td>\n      <td>5.105067e+06</td>\n      <td>88018.396600</td>\n      <td>3.204947e+06</td>\n      <td>1.317147e+06</td>\n      <td>10289.000000</td>\n      <td>188565.000000</td>\n      <td>384119.000000</td>\n      <td>99.822821</td>\n      <td>...</td>\n      <td>88.898674</td>\n      <td>48.078510</td>\n      <td>20.791321</td>\n      <td>5.023523e+06</td>\n      <td>99.860384</td>\n      <td>48.691099</td>\n      <td>64.308477</td>\n      <td>43.312464</td>\n      <td>31.161972</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 25 columns</p>\n</div>\n```\n:::\n:::\n\n\n1.  head()는 데이터 앞부분을 출력해준다.\n2.  tail()은 데이터 뒷부분을 출력해준다.\n3.  shape()는 행, 열 개수를 출력한다. (437, 28)로 출력되었으므로 437행, 28열을 뜻한다.\n4.  info()는 변수 속성을 출력한다. 변수는 열의 개수와 같으므로 28개이고, 다 non-null 상태이다. 즉, 값이 다 존재한다는 뜻이다. 데이터 타입은 int64, float64, object(문자열)로 이루어져 있다.\n5.  describe()는 요약 통계량을 출력한다. 각 데이터의 개수(count), 평균(mean), 표준편차(std), 최소값(min), 1사분위수(25%), 중앙값(50%), 3사분위수(75%), 최대값(max)를 보여준다.\n\n## poptoptal(전체 인구) 변수를 total로, popasian(아시아 안구) 변수를 asian으로 수정하세요.\n\n::: {#97bd8a8e .cell execution_count=8}\n``` {.python .cell-code}\nmidwest = midwest.rename(columns = {\"poptotal\" : \"total\", \"popasian\" : \"asian\"})\nmidwest\nmidwest.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n```\n:::\n:::\n\n\n## total, asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\n::: {#9436de27 .cell execution_count=9}\n``` {.python .cell-code}\nmidwest[\"asian_percentage\"] = ((midwest[\"asian\"] / midwest[\"total\"])*100)\nmidwest\nmidwest.info()\n\nimport matplotlib.pyplot as plot\nmidwest[\"asian_percentage\"].plot.hist()\nplot.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 437 entries, 0 to 436\nData columns (total 29 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \n 28  asian_percentage      437 non-null    float64\ndtypes: float64(16), int64(10), object(3)\nmemory usage: 99.1+ KB\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](homework1_files/figure-html/cell-10-output-2.png){width=593 height=411}\n:::\n:::\n\n\n-   이 그래프는 x축에 전체 인구 대비 아시아 인구 백분율 값이 표현되어 있다. y축에는 각 계급 구간의 빈도가 표현되어 있다.\n\n## 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 'large', 그 외에는 'small'을 부여한 파생변수를 만들어보세요.\n\n### 전체 평균\n\n::: {#13059a88 .cell execution_count=10}\n``` {.python .cell-code}\nimport numpy as np\nasian_mean = np.mean(midwest[\"asian_percentage\"])\n```\n:::\n\n\n### large, small 부여한 파생변수\n\n::: {#e1613e79 .cell execution_count=11}\n``` {.python .cell-code}\nmidwest[\"asian_mean\"] = np.where(midwest[\"asian_percentage\"] > asian_mean, \"large\", \"small\")\nmidwest.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PID</th>\n      <th>county</th>\n      <th>state</th>\n      <th>area</th>\n      <th>total</th>\n      <th>popdensity</th>\n      <th>popwhite</th>\n      <th>popblack</th>\n      <th>popamerindian</th>\n      <th>asian</th>\n      <th>...</th>\n      <th>poppovertyknown</th>\n      <th>percpovertyknown</th>\n      <th>percbelowpoverty</th>\n      <th>percchildbelowpovert</th>\n      <th>percadultpoverty</th>\n      <th>percelderlypoverty</th>\n      <th>inmetro</th>\n      <th>category</th>\n      <th>asian_percentage</th>\n      <th>asian_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>432</th>\n      <td>3048</td>\n      <td>WAUKESHA</td>\n      <td>WI</td>\n      <td>0.034</td>\n      <td>304715</td>\n      <td>8962.205880</td>\n      <td>298313</td>\n      <td>1096</td>\n      <td>672</td>\n      <td>2699</td>\n      <td>...</td>\n      <td>299802</td>\n      <td>98.387674</td>\n      <td>3.121060</td>\n      <td>3.785820</td>\n      <td>2.590061</td>\n      <td>4.085479</td>\n      <td>1</td>\n      <td>HLU</td>\n      <td>0.885746</td>\n      <td>large</td>\n    </tr>\n    <tr>\n      <th>433</th>\n      <td>3049</td>\n      <td>WAUPACA</td>\n      <td>WI</td>\n      <td>0.045</td>\n      <td>46104</td>\n      <td>1024.533330</td>\n      <td>45695</td>\n      <td>22</td>\n      <td>125</td>\n      <td>92</td>\n      <td>...</td>\n      <td>44412</td>\n      <td>96.330036</td>\n      <td>8.488697</td>\n      <td>10.071411</td>\n      <td>6.953799</td>\n      <td>10.338641</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.199549</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>434</th>\n      <td>3050</td>\n      <td>WAUSHARA</td>\n      <td>WI</td>\n      <td>0.037</td>\n      <td>19385</td>\n      <td>523.918919</td>\n      <td>19094</td>\n      <td>29</td>\n      <td>70</td>\n      <td>43</td>\n      <td>...</td>\n      <td>19163</td>\n      <td>98.854785</td>\n      <td>13.786985</td>\n      <td>20.050708</td>\n      <td>11.695784</td>\n      <td>11.804558</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.221821</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>435</th>\n      <td>3051</td>\n      <td>WINNEBAGO</td>\n      <td>WI</td>\n      <td>0.035</td>\n      <td>140320</td>\n      <td>4009.142860</td>\n      <td>136822</td>\n      <td>697</td>\n      <td>685</td>\n      <td>1728</td>\n      <td>...</td>\n      <td>133950</td>\n      <td>95.460376</td>\n      <td>8.804031</td>\n      <td>10.592031</td>\n      <td>8.660587</td>\n      <td>6.661094</td>\n      <td>1</td>\n      <td>HAU</td>\n      <td>1.231471</td>\n      <td>large</td>\n    </tr>\n    <tr>\n      <th>436</th>\n      <td>3052</td>\n      <td>WOOD</td>\n      <td>WI</td>\n      <td>0.048</td>\n      <td>73605</td>\n      <td>1533.437500</td>\n      <td>72157</td>\n      <td>90</td>\n      <td>481</td>\n      <td>722</td>\n      <td>...</td>\n      <td>72685</td>\n      <td>98.750085</td>\n      <td>8.525831</td>\n      <td>11.162997</td>\n      <td>7.375656</td>\n      <td>7.882918</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.980912</td>\n      <td>large</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 30 columns</p>\n</div>\n```\n:::\n:::\n\n\n## 'large'와 'small'에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\n::: {#f054b58c .cell execution_count=12}\n``` {.python .cell-code}\nmidwest[\"asian_mean\"].value_counts()\ncount_mean = midwest[\"asian_mean\"].value_counts()\ncount_mean.plot.bar(rot = 0)\nplot.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](homework1_files/figure-html/cell-13-output-1.png){width=575 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "homework1_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}